/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICharacterReveal,
  ICharacterRevealInterface,
} from "../../../contracts/interfaces/ICharacterReveal";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "worldId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "characterDefinitionId",
        type: "uint256",
      },
    ],
    name: "Reveal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "worldId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getRevealState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "characterDefinitionId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRevealed",
            type: "bool",
          },
        ],
        internalType: "struct ICharacterReveal.RevealStateRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "worldId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICharacterReveal__factory {
  static readonly abi = _abi;
  static createInterface(): ICharacterRevealInterface {
    return new utils.Interface(_abi) as ICharacterRevealInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICharacterReveal {
    return new Contract(address, _abi, signerOrProvider) as ICharacterReveal;
  }
}

"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IItemTransfer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "worldId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "targetTokenId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "itemDefinitionIds",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "int64[]",
                name: "amounts",
                type: "int64[]",
            },
        ],
        name: "TransferItems",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "worldId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "targetTokenId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "itemDefinitionIds",
                type: "uint256[]",
            },
            {
                internalType: "int64[]",
                name: "amounts",
                type: "int64[]",
            },
        ],
        name: "transfer",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "worldId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "targetTokenId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "itemDefinitionIds",
                type: "uint256[]",
            },
            {
                internalType: "int64[]",
                name: "amounts",
                type: "int64[]",
            },
        ],
        name: "validateTransfer",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "validWorldId",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "validTokenId",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "validTargetTokenId",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "validLength",
                        type: "bool",
                    },
                    {
                        internalType: "bool[]",
                        name: "validTransferables",
                        type: "bool[]",
                    },
                    {
                        internalType: "bool[]",
                        name: "validAmounts",
                        type: "bool[]",
                    },
                ],
                internalType: "struct IItemTransfer.TransferValidationResult",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class IItemTransfer__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IItemTransfer__factory = IItemTransfer__factory;
IItemTransfer__factory.abi = _abi;

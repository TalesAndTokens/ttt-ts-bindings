/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICharacterStorage,
  ICharacterStorageInterface,
} from "../../contracts/ICharacterStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "worldId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "itemDefinitionIds",
        type: "uint256[]",
      },
    ],
    name: "getItems",
    outputs: [
      {
        internalType: "int64[]",
        name: "",
        type: "int64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICharacterStorage__factory {
  static readonly abi = _abi;
  static createInterface(): ICharacterStorageInterface {
    return new Interface(_abi) as ICharacterStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICharacterStorage {
    return new Contract(address, _abi, runner) as unknown as ICharacterStorage;
  }
}
